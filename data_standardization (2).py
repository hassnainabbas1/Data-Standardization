# -*- coding: utf-8 -*-
"""Data Standardization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dCdoGH5DIonWT7oWYpSRz5ME1lajVE49
"""

import numpy as np
import pandas as pd 
import sklearn.datasets
from sklearn.preprocessing import StandardScaler  
from sklearn.model_selection import train_test_split

"""First of All I import libraries and a dataset. Then name the dataset and print it. """

dataset = sklearn.datasets.load_breast_cancer()

print(dataset)

"""# loading the data to a panda dataframe."""

df = pd.DataFrame(dataset.data, columns= dataset.feature_names)

df.head()

df.shape

X = df
Y = dataset.target

print(X)

print(Y)

"""So the X is a data frame and the Y is the target value or label value so the values are either 0 or 1 we dont want to standardize the Y data because their is already two variables we have to standardize the data of X to get some common range.
# Splitting the data into training data and test data.


"""

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=3)

print(X.shape, X_train.shape, X_test.shape)

""" Standardize the data 
If our data has all the values in the same range the standard deviation should be one so here is standard deviation is 228 so we can say that the data in no the same range.
'''

"""

print(dataset.data.std())

"""To standardize the data we are using the library of standard scalar 
scalar dot preprocessing so you can see how the data is standardize so their is a formula z=(x-u)/s that tell us that each data point taken and the mean will be subtratracted from its means ( the u represents the mean) and the s represents the scalar deviation or standard deviation. when u apply this formula it does not affect the nature of the data it only change the value range.
"""

scaler = StandardScaler()

scaler.fit(X_train)

X_train_standardized = scaler.transform(X_train)

print(X_train_standardized)

"""You can see these values are very close to each other between 0 and 1 but as you can see previous the X have values seventeen , twenty and have thousands and two thousands etc. Now you can see that the values are in similar range 


"""

X_test_standardized = scaler.transform(X_test)

print(X_train_standardized.std())